(define (make-mobile left right)
  (list left right))
(define (make-branch length structure)
  (list length structure))

                                        ;a.
(define (left-branch mobile)
  (car mobile))
(define (right-branch mobile)
  (cadr mobile))
(define (branch-length branch)
  (car branch))
(define (branch-structure branch)
  (cadr branch))

                                        ;b
(define (branch-weight branch)
    (let ((structure (branch-structure branch)))
      (if (not (pair? structure))
          structure
          (total-weight structure))))
(define (total-weight mobile)
  (+ (branch-weight (left-branch mobile))
     (branch-weight (right-branch mobile))))

(define branch-a (make-branch 6 5))
(define branch-b (make-branch 10 3))
(define mobile-a (make-mobile branch-a branch-b))
(define branch-c (make-branch 7 mobile-a))
(define branch-d (make-branch 2 28))
(define mobile-b (make-mobile branch-c branch-d))
(define mobile-c (make-mobile branch-a branch-c))
(define mobile-d (make-mobile branch-b branch-d))

(total-weight mobile-a)
(total-weight mobile-b)
(total-weight mobile-c)
(total-weight mobile-d)
                                        ;c
(define (branch-torque branch)
  (* (branch-length branch)
     (branch-weight branch)))
(define (branch-balanced? branch)
  (let ((structure (branch-structure branch)))
    (if (not (pair? structure))
        #t
        (balanced? structure))))
(define (balanced? mobile)
  (let ((left (left-branch mobile))
        (right (right-branch mobile)))
    (and (branch-balanced? left)
         (branch-balanced? right)
         (= (branch-torque left)
            (branch-torque right)))))

(balanced? mobile-a)
(balanced? mobile-b)
(balanced? mobile-c)
(balanced? mobile-d)
                                        ;d 如果构造方法改变的话，只需改变相应的选择方法即可（实际上只用修改两个）
(define (make-mobile left right)
  (cons left right))
(define (make-branch length structure)
  (cons length structure))

(define (right-branch mobile)
  (cdr mobile))
(define (branch-structure branch)
  (cdr branch))
