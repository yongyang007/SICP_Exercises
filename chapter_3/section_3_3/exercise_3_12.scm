(define (append x y)
  (if (null? x)
      y
      (cons (car x) (append (cdr x) y))))

(define (append! x y)
  (set-cdr! (last-pair x) y)
  x)
(define (last-pair x)
  (if (null? (cdr x))
      x
      (last-pair (cdr x))))

(define x (list 'a 'b))
(define y (list 'c 'd))

(define z (append x y))
z
(cdr x) ; => (b)

(define w (append! x y))
w
(cdr x) ; => (b c d)

;; 盒子图如下：
;; 使用append!之前：
;;       -----       -----          -----       -----
;; x---->|.|.|------>|.|/|    y---->|.|.|------>|.|/|
;;       -----       -----        ^ -----       -----
;;  	    |  ---      |  ---   	  |  |  ---      |  ---
;; 		    |->|a|      |->|b|  	  |  |->|c|      |->|d|
;; 		       ---         ---  		|     ---         ---
;;            ^           ^       |
;;            |           |       |
;;           -----       -----    |
;; z-------->|.|.|------>|.|.|----|
;;           -----       -----
;; 
;; 使用append!之后：
;; 
;;           -----       -----          -----       -----
;; w--(x)--->|.|.|------>|.|.|---(y)--->|.|.|------>|.|/|
;;           -----       -----        ^ -----       -----
;;      	    |  ---      |  ---   	  |  |  ---      |  ---
;;     		    |->|a|      |->|b|  		|  |->|c|      |->|d|
;;     		       ---         ---  		|     ---         ---
;;                ^           ^       |
;;                |           |       |
;;               -----       -----    |
;;     z-------->|.|.|------>|.|.|----|
;;               -----       -----